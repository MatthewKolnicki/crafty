service: fastapi-lambda

package:
  exclude:
    - node_modules/**
    - venv/**
    - .venv/**
    - __pycache__/**
    - .pytest_cache/**
    - .git/**
    - tests/**
    - .DS_Store

provider:
  name: aws
  runtime: python3.11
  region: us-east-1
  stage: dev
  timeout: 29
  memorySize: 512
  vpc:
    securityGroupIds:
      - sg-080428ad104fe6334
    subnetIds:
      - subnet-09a823a946e4c9ee5
      - subnet-05778b2249204d7c8
  environment:
    POSTGRES_HOST: ${env:POSTGRES_HOST}
    POSTGRES_PORT: ${env:POSTGRES_PORT}
    POSTGRES_USER: ${env:POSTGRES_USER}
    POSTGRES_PASSWORD: ${env:POSTGRES_PASSWORD}
    POSTGRES_DB: ${env:POSTGRES_DB}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ec2:CreateNetworkInterface
            - ec2:DescribeNetworkInterfaces
            - ec2:DeleteNetworkInterface
            - ec2:AssignPrivateIpAddresses
            - ec2:UnassignPrivateIpAddresses
          Resource: "*"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    layer: true
    useDownloadCache: true
    useStaticCache: true
    invalidateCaches: true

functions:
  app:
    handler: app.main.handler
    layers:
      - !Ref PythonRequirementsLambdaLayer
      - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python311:22
    events:
      - http:
          path: /
          method: get
      - http:
          path: /{proxy+}
          method: any
    environment:
      PYTHONPATH: "/var/runtime:/var/task:/opt/python"